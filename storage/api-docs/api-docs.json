{
    "openapi": "3.0.0",
    "info": {
        "title": "GeoPagos Reto Api. Edwin Jose Mogollon Escalona eJme1992",
        "description": "Documentación de la API para la gestión de torneos",
        "version": "1.0.0"
    },
    "paths": {
        "/api/genders/attributes/{gender}": {
            "get": {
                "tags": [
                    "Attributes"
                ],
                "summary": "Get attributes by gender",
                "description": "Registers a new player with the specified details. Requires JWT token for authentication.",
                "operationId": "508d89b67be2d8dfdfc8f3cdf2a4ed94",
                "parameters": [
                    {
                        "name": "gender",
                        "in": "path",
                        "description": "Gender slug to filter attributes",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Attributes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login a user",
                "description": "Logs in a user with the specified email and password.",
                "operationId": "2dd578ff7aba2721293dac66833b27d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "msj": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "description": "User data",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "msj": {
                                            "type": "string",
                                            "example": "Login failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user with the specified email and password.",
                "operationId": "0903f2e0df1a8857bee538fc055417f0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 201
                                        },
                                        "msj": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "msj": {
                                            "type": "string",
                                            "example": "Registration failed"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/genders/all": {
            "get": {
                "tags": [
                    "Genders"
                ],
                "summary": "Obtener todos los géneros",
                "description": "Devuelve una lista de todos los géneros con los campos `slug` y `name`. Requiere un token JWT para la autenticación.",
                "operationId": "1f169fd9e839946d4eba1e327918c485",
                "responses": {
                    "200": {
                        "description": "Lista de géneros obtenida exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "slug": {
                                                "type": "string",
                                                "example": "femenino"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Femenino"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error al obtener la lista de géneros",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/players/register": {
            "post": {
                "tags": [
                    "Players"
                ],
                "summary": "Register a new player",
                "description": "Registers a new player with the specified details. Requires JWT token for authentication.",
                "operationId": "f0b9f3867ed66bf53bf702ed24abbcce",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "gender": {
                                        "description": "Gender of the player",
                                        "type": "string",
                                        "enum": [
                                            "male",
                                            "female"
                                        ],
                                        "example": "male"
                                    },
                                    "name": {
                                        "description": "Name of the player",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "ability": {
                                        "description": "Ability of the player (1-100)",
                                        "type": "integer",
                                        "format": "int32",
                                        "maximum": 100,
                                        "minimum": 1,
                                        "example": 75
                                    },
                                    "atributesPlayer": {
                                        "description": "Attributes of the player as key-value pairs",
                                        "properties": {
                                            "strength": {
                                                "description": "Strength attribute of the player",
                                                "type": "number",
                                                "example": 5
                                            },
                                            "speed": {
                                                "description": "Speed attribute of the player",
                                                "type": "number",
                                                "example": 5
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Player registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "description": "Registered player data",
                                            "properties": {
                                                "id": {
                                                    "description": "Player ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "gender": {
                                                    "type": "string",
                                                    "example": "male"
                                                },
                                                "ability": {
                                                    "type": "integer",
                                                    "format": "int32",
                                                    "example": 75
                                                },
                                                "atributesPlayer": {
                                                    "description": "Attributes of the player as key-value pairs",
                                                    "properties": {
                                                        "strength": {
                                                            "type": "number",
                                                            "example": 5
                                                        },
                                                        "speed": {
                                                            "type": "number",
                                                            "example": 5
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "description": "Validation error messages",
                                            "properties": {
                                                "gender": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The gender field is required."
                                                    ]
                                                },
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The name field is required."
                                                    ]
                                                },
                                                "ability": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The ability must be an integer between 1 and 100."
                                                    ]
                                                },
                                                "atributesPlayer": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The atributes player field is required."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/players/gender/{gender}": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Obtiene una lista de jugadores según el género",
                "description": "Obtiene una lista de jugadores según el género especificado. Requiere un token JWT para la autenticación.",
                "operationId": "f716f06b41148f4da18546a022d9e623",
                "parameters": [
                    {
                        "name": "gender",
                        "in": "path",
                        "description": "Género de los jugadores a buscar (ej: 'male', 'female')",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de jugadores encontrada",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "gender": {
                                                        "type": "string",
                                                        "example": "male"
                                                    },
                                                    "ability": {
                                                        "type": "integer",
                                                        "example": 85
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No se encontraron jugadores",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No players found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/players/gender/nottournament/{gender}/{tournamentId}": {
            "get": {
                "tags": [
                    "Players"
                ],
                "summary": "Obtiene jugadores por género que no están en el torneo",
                "description": "Este endpoint devuelve una lista de jugadores de un género específico que no están inscritos en un torneo determinado. Requiere un token JWT para la autenticación.",
                "operationId": "6d0367e698ad95b5f930817cf7ac5c3a",
                "parameters": [
                    {
                        "name": "gender",
                        "in": "path",
                        "description": "El slug del género de los jugadores que se desean obtener.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tournamentId",
                        "in": "path",
                        "description": "El ID del torneo en el que se desea verificar la inscripción de los jugadores.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de jugadores obtenida exitosamente.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No se encontraron jugadores para el género especificado.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No players found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        },
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tournaments/register": {
            "post": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Crear un nuevo torneo",
                "description": "Registers a new player with the specified details. Requires JWT token for authentication.",
                "operationId": "fee228ea0319b6d99ffc736c8f433d64",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "gender",
                                    "name",
                                    "number_players"
                                ],
                                "properties": {
                                    "gender": {
                                        "type": "string",
                                        "example": "male"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Torneo de Verano"
                                    },
                                    "number_players": {
                                        "type": "integer",
                                        "example": 16
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Torneo creado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error en la validación de los parámetros",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "El número de participantes debe ser mayor a cero y múltiplo de dos"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Mensaje de error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tournaments/register-player": {
            "post": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Registrar un jugador en un torneo",
                "description": "Registers a new player with the specified details. Requires JWT token for authentication.",
                "operationId": "7b877d3ae80a62eed4b31c27f001972f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tournament_id",
                                    "player_id"
                                ],
                                "properties": {
                                    "tournament_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "player_id": {
                                        "type": "integer",
                                        "example": 10
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Jugador registrado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error en la validación de los parámetros",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "El torneo ya tiene el número de jugadores requeridos"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Mensaje de error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tournaments/is-complete/{tournamentId}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Verificar si el torneo está completo",
                "description": "Registers a new player with the specified details. Requires JWT token for authentication.",
                "operationId": "52f8e1617881d805446686398e365eef",
                "parameters": [
                    {
                        "name": "tournamentId",
                        "in": "path",
                        "description": "ID del torneo",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estado del torneo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "isComplete": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Mensaje de error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tournaments/gender/{gender}": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Obtener torneos por género",
                "description": "Registers a new player with the specified details. Requires JWT token for authentication.",
                "operationId": "ab83993755b2b8c1bad6b4c718ef0e2e",
                "parameters": [
                    {
                        "name": "gender",
                        "in": "path",
                        "description": "Género de los torneos a filtrar",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "male"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lista de torneos",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Torneo de Verano"
                                                    },
                                                    "gender": {
                                                        "type": "string",
                                                        "example": "male"
                                                    },
                                                    "number_players": {
                                                        "type": "integer",
                                                        "example": 16
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Mensaje de error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tournaments/{tournament_id}/start": {
            "get": {
                "tags": [
                    "Tournaments"
                ],
                "summary": "Iniciar un torneo",
                "description": "Inicia un torneo dado su ID. Requiere un token JWT para la autenticación.",
                "operationId": "e4e326e6952182adf54934788e988875",
                "parameters": [
                    {
                        "name": "tournament_id",
                        "in": "path",
                        "description": "ID del torneo a iniciar",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Torneo iniciado exitosamente",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Solicitud incorrecta",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Error interno del servidor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "PlayService": {
                "title": "Play Service",
                "description": "Service for managing Plays",
                "type": "object"
            },
            "PlayerService": {
                "title": "Player Service",
                "description": "Service for managing players",
                "type": "object"
            },
            "TournamentService": {
                "title": "Tournament Service",
                "description": "Service for managing Tournament",
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}